spring:
  application:
    name: common-platform-security-center
    version: 1.0.0
    description: Security Center - Authentication and Session Management
    team:
      name: Firefly Software Solutions Inc
      email: dev@getfirefly.io

  webflux:
    base-path: /

  threads:
    virtual:
      enabled: true

server:
  address: ${SERVER_ADDRESS:localhost}
  port: ${SERVER_PORT:8085}
  shutdown: graceful

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tagsSorter: alpha
    operationsSorter: method
    docExpansion: none
    filter: true
  packages-to-scan: com.firefly.security.center.web.controllers
  paths-to-match: /api/**

firefly:
  # Firefly Common Cache configuration
  cache:
    enabled: true
    default-cache-type: CAFFEINE  # Options: CAFFEINE, REDIS, AUTO
    metrics-enabled: true
    health-enabled: true
    
    caffeine:
      cache-name: session-cache
      enabled: true
      key-prefix: "firefly:session"
      maximum-size: 10000
      expire-after-write: PT30M  # ISO-8601 duration format
      record-stats: true
    
    # Optional Redis configuration (requires Redis dependencies)
    redis:
      cache-name: session-cache
      enabled: false
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: 0
      key-prefix: "firefly:session"
      password: ${REDIS_PASSWORD:}
  
  security-center:
    # IDP Configuration
    idp:
      provider: keycloak  # Options: keycloak, cognito, custom
      
      # Keycloak configuration
      keycloak:
        server-url: ${KEYCLOAK_URL:http://localhost:8080}
        realm: ${KEYCLOAK_REALM:firefly}
        client-id: ${KEYCLOAK_CLIENT_ID:security-center}
        client-secret: ${KEYCLOAK_CLIENT_SECRET}
        admin-username: ${KEYCLOAK_ADMIN_USERNAME:admin}
        admin-password: ${KEYCLOAK_ADMIN_PASSWORD:admin}
      
      # AWS Cognito configuration (when lib-idp-aws-cognito-impl is added)
      cognito:
        region: ${AWS_REGION:us-east-1}
        user-pool-id: ${COGNITO_USER_POOL_ID}
        client-id: ${COGNITO_CLIENT_ID}
        client-secret: ${COGNITO_CLIENT_SECRET}
        domain: ${COGNITO_DOMAIN}
    
    session:
      timeout-minutes: 30
      cleanup-interval-minutes: 15

    # Downstream microservice SDK clients
    clients:
      customer-mgmt:
        base-url: ${CUSTOMER_MGMT_URL:http://localhost:8080}
        timeout-seconds: 10
      contract-mgmt:
        base-url: ${CONTRACT_MGMT_URL:http://localhost:8081}
        timeout-seconds: 10
      product-mgmt:
        base-url: ${PRODUCT_MGMT_URL:http://localhost:8082}
        timeout-seconds: 10
      reference-master-data:
        base-url: ${REFERENCE_MASTER_DATA_URL:http://localhost:8083}
        timeout-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    defaults:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    root: INFO
    com.firefly: DEBUG
    org.springframework.web: DEBUG

---
spring:
  config:
    activate:
      on-profile: testing

logging:
  level:
    root: INFO
    com.firefly: DEBUG
    org.springframework.web: INFO

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.firefly: INFO
    org.springframework: WARN

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false
